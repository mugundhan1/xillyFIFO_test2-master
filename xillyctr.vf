////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2012 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.5
//  \   \         Application : sch2hdl
//  /   /         Filename : xillyctr.vf
// /___/   /\     Timestamp : 12/29/2016 19:18:27
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath E:/xillyFIFO_test2-master/ipcore_dir -intstyle ise -family virtex5 -verilog E:/xillyFIFO_test2-master/xillyctr.vf -w E:/xillyFIFO_test2-master/xillyctr.sch
//Design Name: xillyctr
//Device: virtex5
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module xillyctr(clk, 
                fifo_rst, 
                PCIE_PERST_B_LS, 
                PCIE_REFCLK_N, 
                PCIE_REFCLK_P, 
                PCIE_RX0_N, 
                PCIE_RX0_P, 
                xilly_fifo_rst, 
                GPIO_LED, 
                locked, 
                PCIE_TX0_N, 
                PCIE_TX0_P, 
                quiesce);

    input clk;
    input fifo_rst;
    input PCIE_PERST_B_LS;
    input PCIE_REFCLK_N;
    input PCIE_REFCLK_P;
    input PCIE_RX0_N;
    input PCIE_RX0_P;
    input xilly_fifo_rst;
   output [3:0] GPIO_LED;
   output locked;
   output PCIE_TX0_N;
   output PCIE_TX0_P;
   output quiesce;
   
   wire busclk;
   wire pcie_ref_clk;
   wire samp_clk;
   wire [31:0] xf_data;
   wire [15:0] XLXN_3;
   wire XLXN_13;
   wire XLXN_18;
   wire XLXN_19;
   wire [31:0] XLXN_29;
   wire [31:0] XLXN_94;
   wire XLXN_97;
   wire [31:0] XLXN_98;
   wire XLXN_99;
   wire [31:0] XLXN_115;
   wire XLXN_117;
   wire [31:0] XLXN_128;
   wire [3:0] XLXN_136;
   wire XLXN_159;
   wire [31:0] XLXN_160;
   wire XLXN_161;
   wire XLXN_164;
   wire locked_DUMMY;
   
   assign locked = locked_DUMMY;
   (* IOSTANDARD = "DEFAULT" *) 
   IBUFDS #( .DIFF_TERM("FALSE") ) pcieclk_ibuf (.I(PCIE_REFCLK_P), 
                        .IB(PCIE_REFCLK_N), 
                        .O(pcie_ref_clk));
   clk_ctrl  XLXI_1 (.CLKIN1_IN(clk), 
                    .RST_IN(), 
                    .CLKOUT0_OUT(samp_clk), 
                    .LOCKED_OUT(locked_DUMMY));
   counter  XLXI_2 (.clk(samp_clk), 
                   .en(locked_DUMMY), 
                   .val(XLXN_3[15:0]));
   INV  XLXI_7 (.I(samp_clk), 
               .O(XLXN_13));
   fifo_wrap  XLXI_16 (.din(XLXN_3[15:0]), 
                      .rd_clk(busclk), 
                      .rd_en(XLXN_18), 
                      .rst(fifo_rst), 
                      .wr_clk(XLXN_13), 
                      .wr_en(locked_DUMMY), 
                      .dout(XLXN_29[31:0]), 
                      .empty(), 
                      .full(), 
                      .prog_full(XLXN_19));
   Ctrl  XLXI_19 (.clk(busclk), 
                 .prg_full(XLXN_19), 
                 .en(XLXN_164), 
                 .fifo_rd(XLXN_18), 
                 .fr_cnt(), 
                 .Header_Address(XLXN_136[3:0]), 
                 .h_en(XLXN_117));
   Mux_8_bit  XLXI_20 (.Fifo_Data(XLXN_29[31:0]), 
                      .Header_data(XLXN_115[31:0]), 
                      .Sel(XLXN_117), 
                      .Data_Out(XLXN_94[31:0]));
   xilly_data_fifo_wrap  XLXI_22 (.clk(busclk), 
                                 .din(XLXN_94[31:0]), 
                                 .rd_en(XLXN_99), 
                                 .rst(xilly_fifo_rst), 
                                 .wr_en(XLXN_164), 
                                 .dout(XLXN_98[31:0]), 
                                 .empty(XLXN_97), 
                                 .full());
   byte_reorder_8bit  XLXI_23 (.data_in(XLXN_98[31:0]), 
                              .data_out(xf_data[31:0]));
   xillybus  XLXI_37 (.PCIE_PERST_B_LS(PCIE_PERST_B_LS), 
                     .pcie_ref_clk(pcie_ref_clk), 
                     .PCIE_RX0_N(PCIE_RX0_N), 
                     .PCIE_RX0_P(PCIE_RX0_P), 
                     .user_r_mem_8_data(), 
                     .user_r_mem_8_empty(), 
                     .user_r_mem_8_eof(), 
                     .user_r_read_32_data(xf_data[31:0]), 
                     .user_r_read_32_empty(XLXN_97), 
                     .user_r_read_32_eof(), 
                     .user_w_mem_8_full(), 
                     .bus_clk(busclk), 
                     .GPIO_LED(GPIO_LED[3:0]), 
                     .PCIE_TX0_N(PCIE_TX0_N), 
                     .PCIE_TX0_P(PCIE_TX0_P), 
                     .quiesce(quiesce), 
                     .user_mem_8_addr(), 
                     .user_mem_8_addr_update(), 
                     .user_r_mem_8_open(), 
                     .user_r_mem_8_rden(), 
                     .user_r_read_32_open(), 
                     .user_r_read_32_rden(XLXN_99), 
                     .user_w_mem_8_data(), 
                     .user_w_mem_8_open(), 
                     .user_w_mem_8_wren());
   fr_ctr  XLXI_51 (.clk(busclk), 
                   .en(XLXN_161), 
                   .val(XLXN_128[31:0]));
   INV  XLXI_55 (.I(busclk), 
                .O(XLXN_159));
   Header_RAM2  XLXI_56 (.Address(XLXN_136[3:0]), 
                        .frame_count(XLXN_128[31:0]), 
                        .pps_count(XLXN_160[31:0]), 
                        .rd_clk(XLXN_159), 
                        .rd_en(XLXN_117), 
                        .data_out(XLXN_115[31:0]));
   frame_counter  XLXI_58 (.ce(XLXN_161), 
                          .clk(XLXN_159), 
                          .q(XLXN_160[31:0]));
   edg_det_wrap  XLXI_60 (.ce(locked_DUMMY), 
                         .clk(busclk), 
                         .in_x0(XLXN_164), 
                         .out_x0(XLXN_161));
endmodule
