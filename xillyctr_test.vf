////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2012 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.5
//  \   \         Application : sch2hdl
//  /   /         Filename : xillyctr_test.vf
// /___/   /\     Timestamp : 12/24/2016 10:10:26
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath E:/xillyFIFO_test/xillyFIFO_test/ipcore_dir -sympath E:/xillycounter/ipcore_dir -intstyle ise -family virtex5 -verilog E:/xillyFIFO_test/xillyFIFO_test/xillyctr_test.vf -w E:/xillyFIFO_test/xillyFIFO_test/xillyctr_test.sch
//Design Name: xillyctr_test
//Device: virtex5
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module xillyctr_test(busclk, 
                     clk, 
                     fifo_rst, 
                     xilly_fifo_rst, 
                     locked, 
                     xf_data);

    input busclk;
    input clk;
    input fifo_rst;
    input xilly_fifo_rst;
   output locked;
   output [31:0] xf_data;
   
   wire [31:0] mux_data;
   wire [3:0] ram_addr;
   wire samp_clk;
   wire [15:0] XLXN_3;
   wire XLXN_11;
   wire XLXN_13;
   wire [31:0] XLXN_14;
   wire XLXN_16;
   wire XLXN_18;
   wire XLXN_19;
   wire [31:0] XLXN_21;
   wire [31:0] XLXN_22;
   wire XLXN_27;
   wire [31:0] XLXN_32;
   wire [31:0] XLXN_41;
   wire XLXN_90;
   wire XLXN_91;
   wire locked_DUMMY;
   
   assign XLXN_32 = 32'h0a0a0a0a;
   assign locked = locked_DUMMY;
   clk_ctrl  XLXI_1 (.CLKIN1_IN(clk), 
                    .RST_IN(), 
                    .CLKOUT0_OUT(samp_clk), 
                    .LOCKED_OUT(locked_DUMMY));
   INV  XLXI_2 (.I(samp_clk), 
               .O(XLXN_13));
   counter  XLXI_6 (.clk(samp_clk), 
                   .en(locked_DUMMY), 
                   .val(XLXN_3[15:0]));
   fifo_wrap  XLXI_16 (.din(XLXN_3[15:0]), 
                      .rd_clk(busclk), 
                      .rd_en(XLXN_16), 
                      .rst(fifo_rst), 
                      .wr_clk(XLXN_13), 
                      .wr_en(locked_DUMMY), 
                      .dout(XLXN_22[31:0]), 
                      .empty(), 
                      .full(), 
                      .prog_full(XLXN_19));
   hdr_ram  XLXI_17 (.addr(ram_addr[3:0]), 
                    .frame_count(XLXN_14[31:0]), 
                    .pps_count(XLXN_32[31:0]), 
                    .rd_en(XLXN_18), 
                    .data_out(XLXN_21[31:0]));
   fr_ctr  XLXI_18 (.clk(busclk), 
                   .en(XLXN_11), 
                   .val(XLXN_14[31:0]));
   Ctrl  XLXI_19 (.clk(busclk), 
                 .prg_full(XLXN_19), 
                 .en(XLXN_27), 
                 .fifo_rd(XLXN_16), 
                 .fr_cnt(XLXN_11), 
                 .Header_Address(ram_addr[3:0]), 
                 .h_en(XLXN_18));
   Mux_8_bit  XLXI_20 (.Fifo_Data(XLXN_22[31:0]), 
                      .Header_data(XLXN_21[31:0]), 
                      .Sel(XLXN_18), 
                      .Data_Out(mux_data[31:0]));
   xilly_data_fifo_wrap  XLXI_22 (.clk(busclk), 
                                 .din(mux_data[31:0]), 
                                 .rd_en(XLXN_91), 
                                 .rst(xilly_fifo_rst), 
                                 .wr_en(XLXN_27), 
                                 .dout(XLXN_41[31:0]), 
                                 .empty(XLXN_90), 
                                 .full());
   byte_reorder_8bit  XLXI_23 (.data_in(XLXN_41[31:0]), 
                              .data_out(xf_data[31:0]));
   INV  XLXI_38 (.I(XLXN_90), 
                .O(XLXN_91));
endmodule
